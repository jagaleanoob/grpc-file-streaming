// @generated by protobuf-ts 2.9.3 with parameter server_grpc1,client_grpc1,optimize_code_size
// @generated from protobuf file "employees.proto" (syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message Empty
 */
export interface Empty {
}
/**
 * @generated from protobuf message EmployeeRequest
 */
export interface EmployeeRequest {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number;
}
/**
 * @generated from protobuf message EmployeeResponse
 */
export interface EmployeeResponse {
    /**
     * @generated from protobuf field: Employee employee = 1;
     */
    employee?: Employee;
}
/**
 * @generated from protobuf message EmployeeList
 */
export interface EmployeeList {
    /**
     * @generated from protobuf field: repeated Employee employees = 1;
     */
    employees: Employee[];
}
/**
 * @generated from protobuf message Employee
 */
export interface Employee {
    /**
     * @generated from protobuf field: int32 id = 1;
     */
    id: number;
    /**
     * @generated from protobuf field: string first_name = 2;
     */
    firstName: string;
    /**
     * @generated from protobuf field: string last_name = 3;
     */
    lastName: string;
    /**
     * @generated from protobuf field: bool is_retired = 4;
     */
    isRetired: boolean;
    /**
     * @generated from protobuf field: repeated string previous_employers = 6;
     */
    previousEmployers: string[]; // Leave empty if unknown
    /**
     * @generated from protobuf field: Employee.MaritalStatus marital_status = 7;
     */
    maritalStatus: Employee_MaritalStatus;
    /**
     * @generated from protobuf field: map<string, string> relatives = 8;
     */
    relatives: {
        [key: string]: string;
    };
}
/**
 * @generated from protobuf enum Employee.MaritalStatus
 */
export enum Employee_MaritalStatus {
    /**
     * @generated from protobuf enum value: SINGLE = 0;
     */
    SINGLE = 0,
    /**
     * @generated from protobuf enum value: MARRIED = 1;
     */
    MARRIED = 1,
    /**
     * @generated from protobuf enum value: DIVORCED = 2;
     */
    DIVORCED = 2,
    /**
     * @generated from protobuf enum value: OTHER = 3;
     */
    OTHER = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class Empty$Type extends MessageType<Empty> {
    constructor() {
        super("Empty", []);
    }
}
/**
 * @generated MessageType for protobuf message Empty
 */
export const Empty = new Empty$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EmployeeRequest$Type extends MessageType<EmployeeRequest> {
    constructor() {
        super("EmployeeRequest", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message EmployeeRequest
 */
export const EmployeeRequest = new EmployeeRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EmployeeResponse$Type extends MessageType<EmployeeResponse> {
    constructor() {
        super("EmployeeResponse", [
            { no: 1, name: "employee", kind: "message", T: () => Employee }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message EmployeeResponse
 */
export const EmployeeResponse = new EmployeeResponse$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EmployeeList$Type extends MessageType<EmployeeList> {
    constructor() {
        super("EmployeeList", [
            { no: 1, name: "employees", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Employee }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message EmployeeList
 */
export const EmployeeList = new EmployeeList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Employee$Type extends MessageType<Employee> {
    constructor() {
        super("Employee", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "first_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "last_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "is_retired", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "previous_employers", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "marital_status", kind: "enum", T: () => ["Employee.MaritalStatus", Employee_MaritalStatus] },
            { no: 8, name: "relatives", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 9 /*ScalarType.STRING*/ } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message Employee
 */
export const Employee = new Employee$Type();
/**
 * @generated ServiceType for protobuf service EmployeeService
 */
export const EmployeeService = new ServiceType("EmployeeService", [
    { name: "GetEmployee", options: {}, I: EmployeeRequest, O: EmployeeResponse }
]);
