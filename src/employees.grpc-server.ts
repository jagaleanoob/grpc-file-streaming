// @generated by protobuf-ts 2.9.3 with parameter server_grpc1,client_grpc1,optimize_code_size
// @generated from protobuf file "employees.proto" (syntax proto3)
// tslint:disable
import { EmployeeResponse } from "./employees";
import { EmployeeRequest } from "./employees";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service EmployeeService
 */
export interface IEmployeeService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: GetEmployee(EmployeeRequest) returns (EmployeeResponse);
     */
    getEmployee: grpc.handleUnaryCall<EmployeeRequest, EmployeeResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service EmployeeService.
 *
 * Usage: Implement the interface IEmployeeService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IEmployeeService = ...
 * server.addService(employeeServiceDefinition, service);
 * ```
 */
export const employeeServiceDefinition: grpc.ServiceDefinition<IEmployeeService> = {
    getEmployee: {
        path: "/EmployeeService/GetEmployee",
        originalName: "GetEmployee",
        requestStream: false,
        responseStream: false,
        responseDeserialize: bytes => EmployeeResponse.fromBinary(bytes),
        requestDeserialize: bytes => EmployeeRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(EmployeeResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(EmployeeRequest.toBinary(value))
    }
};
