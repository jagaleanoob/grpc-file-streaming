// @generated by protobuf-ts 2.9.3 with parameter server_grpc1,client_grpc1,optimize_code_size
// @generated from protobuf file "file.proto" (syntax proto3)
// tslint:disable
import { CSVUploadResponse } from "./file";
import { CSVUploadRequest } from "./file";
import type * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service FileService
 */
export interface IFileService extends grpc.UntypedServiceImplementation {
    /**
     * @generated from protobuf rpc: UploadCSV(stream CSVUploadRequest) returns (stream CSVUploadResponse);
     */
    uploadCSV: grpc.handleBidiStreamingCall<CSVUploadRequest, CSVUploadResponse>;
}
/**
 * @grpc/grpc-js definition for the protobuf service FileService.
 *
 * Usage: Implement the interface IFileService and add to a grpc server.
 *
 * ```typescript
 * const server = new grpc.Server();
 * const service: IFileService = ...
 * server.addService(fileServiceDefinition, service);
 * ```
 */
export const fileServiceDefinition: grpc.ServiceDefinition<IFileService> = {
    uploadCSV: {
        path: "/FileService/UploadCSV",
        originalName: "UploadCSV",
        requestStream: true,
        responseStream: true,
        responseDeserialize: bytes => CSVUploadResponse.fromBinary(bytes),
        requestDeserialize: bytes => CSVUploadRequest.fromBinary(bytes),
        responseSerialize: value => Buffer.from(CSVUploadResponse.toBinary(value)),
        requestSerialize: value => Buffer.from(CSVUploadRequest.toBinary(value))
    }
};
